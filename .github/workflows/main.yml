name: Unity Build with Submodules

on:
  repository_dispatch:
    types: [start-build]
  push:
    branches:
      - main

jobs:
  set-timestamp:
    runs-on: self-hosted
    outputs:
      steps: ${{ steps.timestamp.outputs }}
    steps:
      - name: Set Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +"%Y%m%d%H%M%S")" >> $GITHUB_ENV

  build:
    runs-on: self-hosted

    steps:

      - name: Get Short Hash
        shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
          echo "branch=$(echo ${GITHUB_REF#refs/heads/})" >> "$GITHUB_ENV"
          
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          lfs: true
        
      #- name: Initialize and update submodules
      #  run: |
      #    git submodule init
      #    git submodule update --recursive

      - name: Fetch Artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          repo: VRS-NDA/VRS-Unity
          name: WebGLBuild
          workflow: main.yml
          #workflow_search: false
          #workflow_conclusion: success
          #check_artifacts: true
          branch: decode
          path: ./webgl
          github_token: ${{ secrets.ARTIFACT_DOWNLOADER_TOKEN }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAK }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{env.sha_short}}
          release_name: Release ${{ env.sha_short }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
      - name: Zip release payload (single archive)
        run: |
          zip -r release.zip . -x ".*" -x "*/.*"
      - name: Upload Release Asset (single zip)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAK }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.zip
          asset_name: ${{ steps.tag.outputs.tag_name }}web.zip
          asset_content_type: application/zip

